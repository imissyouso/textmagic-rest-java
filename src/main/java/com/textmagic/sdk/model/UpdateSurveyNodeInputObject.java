/*
 * TextMagic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.textmagic.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * UpdateSurveyNodeInputObject
 */

public class UpdateSurveyNodeInputObject {
  @SerializedName("label")
  private String label = null;

  @SerializedName("isEndNode")
  private Boolean isEndNode = null;

  @SerializedName("body")
  private String body = null;

  @SerializedName("sendDelay")
  private Integer sendDelay = null;

  public UpdateSurveyNodeInputObject label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Node label
   * @return label
  **/
  @ApiModelProperty(example = "Question 1", value = "Node label")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public UpdateSurveyNodeInputObject isEndNode(Boolean isEndNode) {
    this.isEndNode = isEndNode;
    return this;
  }

   /**
   * Define node is ending for survey. Default is false
   * @return isEndNode
  **/
  @ApiModelProperty(example = "false", value = "Define node is ending for survey. Default is false")
  public Boolean isIsEndNode() {
    return isEndNode;
  }

  public void setIsEndNode(Boolean isEndNode) {
    this.isEndNode = isEndNode;
  }

  public UpdateSurveyNodeInputObject body(String body) {
    this.body = body;
    return this;
  }

   /**
   * Node body
   * @return body
  **/
  @ApiModelProperty(example = "Test node body", value = "Node body")
  public String getBody() {
    return body;
  }

  public void setBody(String body) {
    this.body = body;
  }

  public UpdateSurveyNodeInputObject sendDelay(Integer sendDelay) {
    this.sendDelay = sendDelay;
    return this;
  }

   /**
   * Define delay for sending question to recipients after previous answer.
   * @return sendDelay
  **/
  @ApiModelProperty(example = "1", value = "Define delay for sending question to recipients after previous answer.")
  public Integer getSendDelay() {
    return sendDelay;
  }

  public void setSendDelay(Integer sendDelay) {
    this.sendDelay = sendDelay;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateSurveyNodeInputObject updateSurveyNodeInputObject = (UpdateSurveyNodeInputObject) o;
    return Objects.equals(this.label, updateSurveyNodeInputObject.label) &&
        Objects.equals(this.isEndNode, updateSurveyNodeInputObject.isEndNode) &&
        Objects.equals(this.body, updateSurveyNodeInputObject.body) &&
        Objects.equals(this.sendDelay, updateSurveyNodeInputObject.sendDelay);
  }

  @Override
  public int hashCode() {
    return Objects.hash(label, isEndNode, body, sendDelay);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateSurveyNodeInputObject {\n");
    
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    isEndNode: ").append(toIndentedString(isEndNode)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    sendDelay: ").append(toIndentedString(sendDelay)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

