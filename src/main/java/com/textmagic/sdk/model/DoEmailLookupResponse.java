/*
 * TextMagic API Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 * Contact: support@textmagi.biz
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.textmagic.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DoEmailLookupResponse
 */

public class DoEmailLookupResponse {
  @SerializedName("address")
  private String address = null;

  @SerializedName("addressType")
  private String addressType = null;

  @SerializedName("emailRole")
  private String emailRole = null;

  @SerializedName("reason")
  private String reason = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    VALID("valid"),
    
    INVALID("invalid");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("deliverability")
  private String deliverability = null;

  @SerializedName("isDisposableAddress")
  private Boolean isDisposableAddress = null;

  @SerializedName("localPart")
  private String localPart = null;

  @SerializedName("domainPart")
  private String domainPart = null;

  @SerializedName("exchange")
  private String exchange = null;

  @SerializedName("isInWhiteList")
  private Boolean isInWhiteList = null;

  @SerializedName("isInBlackList")
  private Boolean isInBlackList = null;

  @SerializedName("hasMx")
  private Boolean hasMx = null;

  @SerializedName("hasAa")
  private Boolean hasAa = null;

  @SerializedName("hasAaaa")
  private Boolean hasAaaa = null;

  @SerializedName("risk")
  private String risk = null;

  @SerializedName("preference")
  private Integer preference = null;

  @SerializedName("suggestion")
  private String suggestion = null;

  public DoEmailLookupResponse address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @ApiModelProperty(example = "manager@company.com", required = true, value = "")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public DoEmailLookupResponse addressType(String addressType) {
    this.addressType = addressType;
    return this;
  }

   /**
   * Get addressType
   * @return addressType
  **/
  @ApiModelProperty(example = "corporate", required = true, value = "")
  public String getAddressType() {
    return addressType;
  }

  public void setAddressType(String addressType) {
    this.addressType = addressType;
  }

  public DoEmailLookupResponse emailRole(String emailRole) {
    this.emailRole = emailRole;
    return this;
  }

   /**
   * Get emailRole
   * @return emailRole
  **/
  @ApiModelProperty(example = "manager", required = true, value = "")
  public String getEmailRole() {
    return emailRole;
  }

  public void setEmailRole(String emailRole) {
    this.emailRole = emailRole;
  }

  public DoEmailLookupResponse reason(String reason) {
    this.reason = reason;
    return this;
  }

   /**
   * Get reason
   * @return reason
  **/
  @ApiModelProperty(example = "Requested Mailbox does not exist", required = true, value = "")
  public String getReason() {
    return reason;
  }

  public void setReason(String reason) {
    this.reason = reason;
  }

  public DoEmailLookupResponse status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(required = true, value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public DoEmailLookupResponse deliverability(String deliverability) {
    this.deliverability = deliverability;
    return this;
  }

   /**
   * Get deliverability
   * @return deliverability
  **/
  @ApiModelProperty(example = "undeliverable", required = true, value = "")
  public String getDeliverability() {
    return deliverability;
  }

  public void setDeliverability(String deliverability) {
    this.deliverability = deliverability;
  }

  public DoEmailLookupResponse isDisposableAddress(Boolean isDisposableAddress) {
    this.isDisposableAddress = isDisposableAddress;
    return this;
  }

   /**
   * Get isDisposableAddress
   * @return isDisposableAddress
  **/
  @ApiModelProperty(example = "false", required = true, value = "")
  public Boolean isIsDisposableAddress() {
    return isDisposableAddress;
  }

  public void setIsDisposableAddress(Boolean isDisposableAddress) {
    this.isDisposableAddress = isDisposableAddress;
  }

  public DoEmailLookupResponse localPart(String localPart) {
    this.localPart = localPart;
    return this;
  }

   /**
   * Get localPart
   * @return localPart
  **/
  @ApiModelProperty(example = "manager", required = true, value = "")
  public String getLocalPart() {
    return localPart;
  }

  public void setLocalPart(String localPart) {
    this.localPart = localPart;
  }

  public DoEmailLookupResponse domainPart(String domainPart) {
    this.domainPart = domainPart;
    return this;
  }

   /**
   * Get domainPart
   * @return domainPart
  **/
  @ApiModelProperty(example = "test.com", required = true, value = "")
  public String getDomainPart() {
    return domainPart;
  }

  public void setDomainPart(String domainPart) {
    this.domainPart = domainPart;
  }

  public DoEmailLookupResponse exchange(String exchange) {
    this.exchange = exchange;
    return this;
  }

   /**
   * Get exchange
   * @return exchange
  **/
  @ApiModelProperty(example = "mx01.xworks.net", required = true, value = "")
  public String getExchange() {
    return exchange;
  }

  public void setExchange(String exchange) {
    this.exchange = exchange;
  }

  public DoEmailLookupResponse isInWhiteList(Boolean isInWhiteList) {
    this.isInWhiteList = isInWhiteList;
    return this;
  }

   /**
   * Get isInWhiteList
   * @return isInWhiteList
  **/
  @ApiModelProperty(example = "false", required = true, value = "")
  public Boolean isIsInWhiteList() {
    return isInWhiteList;
  }

  public void setIsInWhiteList(Boolean isInWhiteList) {
    this.isInWhiteList = isInWhiteList;
  }

  public DoEmailLookupResponse isInBlackList(Boolean isInBlackList) {
    this.isInBlackList = isInBlackList;
    return this;
  }

   /**
   * Get isInBlackList
   * @return isInBlackList
  **/
  @ApiModelProperty(example = "false", required = true, value = "")
  public Boolean isIsInBlackList() {
    return isInBlackList;
  }

  public void setIsInBlackList(Boolean isInBlackList) {
    this.isInBlackList = isInBlackList;
  }

  public DoEmailLookupResponse hasMx(Boolean hasMx) {
    this.hasMx = hasMx;
    return this;
  }

   /**
   * Get hasMx
   * @return hasMx
  **/
  @ApiModelProperty(example = "true", required = true, value = "")
  public Boolean isHasMx() {
    return hasMx;
  }

  public void setHasMx(Boolean hasMx) {
    this.hasMx = hasMx;
  }

  public DoEmailLookupResponse hasAa(Boolean hasAa) {
    this.hasAa = hasAa;
    return this;
  }

   /**
   * Get hasAa
   * @return hasAa
  **/
  @ApiModelProperty(example = "true", required = true, value = "")
  public Boolean isHasAa() {
    return hasAa;
  }

  public void setHasAa(Boolean hasAa) {
    this.hasAa = hasAa;
  }

  public DoEmailLookupResponse hasAaaa(Boolean hasAaaa) {
    this.hasAaaa = hasAaaa;
    return this;
  }

   /**
   * Get hasAaaa
   * @return hasAaaa
  **/
  @ApiModelProperty(example = "true", required = true, value = "")
  public Boolean isHasAaaa() {
    return hasAaaa;
  }

  public void setHasAaaa(Boolean hasAaaa) {
    this.hasAaaa = hasAaaa;
  }

  public DoEmailLookupResponse risk(String risk) {
    this.risk = risk;
    return this;
  }

   /**
   * Get risk
   * @return risk
  **/
  @ApiModelProperty(example = "high", required = true, value = "")
  public String getRisk() {
    return risk;
  }

  public void setRisk(String risk) {
    this.risk = risk;
  }

  public DoEmailLookupResponse preference(Integer preference) {
    this.preference = preference;
    return this;
  }

   /**
   * Get preference
   * @return preference
  **/
  @ApiModelProperty(example = "10", required = true, value = "")
  public Integer getPreference() {
    return preference;
  }

  public void setPreference(Integer preference) {
    this.preference = preference;
  }

  public DoEmailLookupResponse suggestion(String suggestion) {
    this.suggestion = suggestion;
    return this;
  }

   /**
   * Get suggestion
   * @return suggestion
  **/
  @ApiModelProperty(example = "account-manager@company.com", required = true, value = "")
  public String getSuggestion() {
    return suggestion;
  }

  public void setSuggestion(String suggestion) {
    this.suggestion = suggestion;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DoEmailLookupResponse doEmailLookupResponse = (DoEmailLookupResponse) o;
    return Objects.equals(this.address, doEmailLookupResponse.address) &&
        Objects.equals(this.addressType, doEmailLookupResponse.addressType) &&
        Objects.equals(this.emailRole, doEmailLookupResponse.emailRole) &&
        Objects.equals(this.reason, doEmailLookupResponse.reason) &&
        Objects.equals(this.status, doEmailLookupResponse.status) &&
        Objects.equals(this.deliverability, doEmailLookupResponse.deliverability) &&
        Objects.equals(this.isDisposableAddress, doEmailLookupResponse.isDisposableAddress) &&
        Objects.equals(this.localPart, doEmailLookupResponse.localPart) &&
        Objects.equals(this.domainPart, doEmailLookupResponse.domainPart) &&
        Objects.equals(this.exchange, doEmailLookupResponse.exchange) &&
        Objects.equals(this.isInWhiteList, doEmailLookupResponse.isInWhiteList) &&
        Objects.equals(this.isInBlackList, doEmailLookupResponse.isInBlackList) &&
        Objects.equals(this.hasMx, doEmailLookupResponse.hasMx) &&
        Objects.equals(this.hasAa, doEmailLookupResponse.hasAa) &&
        Objects.equals(this.hasAaaa, doEmailLookupResponse.hasAaaa) &&
        Objects.equals(this.risk, doEmailLookupResponse.risk) &&
        Objects.equals(this.preference, doEmailLookupResponse.preference) &&
        Objects.equals(this.suggestion, doEmailLookupResponse.suggestion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, addressType, emailRole, reason, status, deliverability, isDisposableAddress, localPart, domainPart, exchange, isInWhiteList, isInBlackList, hasMx, hasAa, hasAaaa, risk, preference, suggestion);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DoEmailLookupResponse {\n");
    
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    addressType: ").append(toIndentedString(addressType)).append("\n");
    sb.append("    emailRole: ").append(toIndentedString(emailRole)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    deliverability: ").append(toIndentedString(deliverability)).append("\n");
    sb.append("    isDisposableAddress: ").append(toIndentedString(isDisposableAddress)).append("\n");
    sb.append("    localPart: ").append(toIndentedString(localPart)).append("\n");
    sb.append("    domainPart: ").append(toIndentedString(domainPart)).append("\n");
    sb.append("    exchange: ").append(toIndentedString(exchange)).append("\n");
    sb.append("    isInWhiteList: ").append(toIndentedString(isInWhiteList)).append("\n");
    sb.append("    isInBlackList: ").append(toIndentedString(isInBlackList)).append("\n");
    sb.append("    hasMx: ").append(toIndentedString(hasMx)).append("\n");
    sb.append("    hasAa: ").append(toIndentedString(hasAa)).append("\n");
    sb.append("    hasAaaa: ").append(toIndentedString(hasAaaa)).append("\n");
    sb.append("    risk: ").append(toIndentedString(risk)).append("\n");
    sb.append("    preference: ").append(toIndentedString(preference)).append("\n");
    sb.append("    suggestion: ").append(toIndentedString(suggestion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

