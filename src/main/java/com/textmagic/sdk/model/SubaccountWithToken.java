/*
 * TextMagic API Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 * Contact: support@textmagi.biz
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.textmagic.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.textmagic.sdk.model.Country;
import com.textmagic.sdk.model.Currency;
import com.textmagic.sdk.model.Timezone;
import com.textmagic.sdk.model.UserImage;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SubaccountWithToken
 */

public class SubaccountWithToken {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("username")
  private String username = null;

  @SerializedName("firstName")
  private String firstName = null;

  @SerializedName("lastName")
  private String lastName = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("balance")
  private Double balance = null;

  @SerializedName("phone")
  private String phone = null;

  @SerializedName("company")
  private String company = null;

  @SerializedName("currency")
  private Currency currency = null;

  @SerializedName("country")
  private Country country = null;

  @SerializedName("timezone")
  private Timezone timezone = null;

  @SerializedName("subaccountType")
  private String subaccountType = null;

  @SerializedName("emailAccepted")
  private Boolean emailAccepted = null;

  @SerializedName("phoneAccepted")
  private Boolean phoneAccepted = null;

  @SerializedName("avatar")
  private UserImage avatar = null;

  @SerializedName("token")
  private String token = null;

  public SubaccountWithToken id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "1", required = true, value = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public SubaccountWithToken username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @ApiModelProperty(example = "Test", required = true, value = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public SubaccountWithToken firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @ApiModelProperty(example = "Test", required = true, value = "")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public SubaccountWithToken lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @ApiModelProperty(example = "Test", required = true, value = "")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public SubaccountWithToken email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @ApiModelProperty(example = "test@test.com", required = true, value = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public SubaccountWithToken status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(example = "A", required = true, value = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public SubaccountWithToken balance(Double balance) {
    this.balance = balance;
    return this;
  }

   /**
   * Get balance
   * @return balance
  **/
  @ApiModelProperty(example = "1.0", required = true, value = "")
  public Double getBalance() {
    return balance;
  }

  public void setBalance(Double balance) {
    this.balance = balance;
  }

  public SubaccountWithToken phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Get phone
   * @return phone
  **/
  @ApiModelProperty(example = "79030011222", required = true, value = "")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }

  public SubaccountWithToken company(String company) {
    this.company = company;
    return this;
  }

   /**
   * Get company
   * @return company
  **/
  @ApiModelProperty(example = "Dummy company", required = true, value = "")
  public String getCompany() {
    return company;
  }

  public void setCompany(String company) {
    this.company = company;
  }

  public SubaccountWithToken currency(Currency currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(required = true, value = "")
  public Currency getCurrency() {
    return currency;
  }

  public void setCurrency(Currency currency) {
    this.currency = currency;
  }

  public SubaccountWithToken country(Country country) {
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @ApiModelProperty(required = true, value = "")
  public Country getCountry() {
    return country;
  }

  public void setCountry(Country country) {
    this.country = country;
  }

  public SubaccountWithToken timezone(Timezone timezone) {
    this.timezone = timezone;
    return this;
  }

   /**
   * Get timezone
   * @return timezone
  **/
  @ApiModelProperty(required = true, value = "")
  public Timezone getTimezone() {
    return timezone;
  }

  public void setTimezone(Timezone timezone) {
    this.timezone = timezone;
  }

  public SubaccountWithToken subaccountType(String subaccountType) {
    this.subaccountType = subaccountType;
    return this;
  }

   /**
   * Get subaccountType
   * @return subaccountType
  **/
  @ApiModelProperty(example = "P", required = true, value = "")
  public String getSubaccountType() {
    return subaccountType;
  }

  public void setSubaccountType(String subaccountType) {
    this.subaccountType = subaccountType;
  }

  public SubaccountWithToken emailAccepted(Boolean emailAccepted) {
    this.emailAccepted = emailAccepted;
    return this;
  }

   /**
   * Get emailAccepted
   * @return emailAccepted
  **/
  @ApiModelProperty(example = "true", required = true, value = "")
  public Boolean isEmailAccepted() {
    return emailAccepted;
  }

  public void setEmailAccepted(Boolean emailAccepted) {
    this.emailAccepted = emailAccepted;
  }

  public SubaccountWithToken phoneAccepted(Boolean phoneAccepted) {
    this.phoneAccepted = phoneAccepted;
    return this;
  }

   /**
   * Get phoneAccepted
   * @return phoneAccepted
  **/
  @ApiModelProperty(example = "true", required = true, value = "")
  public Boolean isPhoneAccepted() {
    return phoneAccepted;
  }

  public void setPhoneAccepted(Boolean phoneAccepted) {
    this.phoneAccepted = phoneAccepted;
  }

  public SubaccountWithToken avatar(UserImage avatar) {
    this.avatar = avatar;
    return this;
  }

   /**
   * Get avatar
   * @return avatar
  **/
  @ApiModelProperty(required = true, value = "")
  public UserImage getAvatar() {
    return avatar;
  }

  public void setAvatar(UserImage avatar) {
    this.avatar = avatar;
  }

  public SubaccountWithToken token(String token) {
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @ApiModelProperty(example = "TokenOfSubaccountPlacedHere", required = true, value = "")
  public String getToken() {
    return token;
  }

  public void setToken(String token) {
    this.token = token;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubaccountWithToken subaccountWithToken = (SubaccountWithToken) o;
    return Objects.equals(this.id, subaccountWithToken.id) &&
        Objects.equals(this.username, subaccountWithToken.username) &&
        Objects.equals(this.firstName, subaccountWithToken.firstName) &&
        Objects.equals(this.lastName, subaccountWithToken.lastName) &&
        Objects.equals(this.email, subaccountWithToken.email) &&
        Objects.equals(this.status, subaccountWithToken.status) &&
        Objects.equals(this.balance, subaccountWithToken.balance) &&
        Objects.equals(this.phone, subaccountWithToken.phone) &&
        Objects.equals(this.company, subaccountWithToken.company) &&
        Objects.equals(this.currency, subaccountWithToken.currency) &&
        Objects.equals(this.country, subaccountWithToken.country) &&
        Objects.equals(this.timezone, subaccountWithToken.timezone) &&
        Objects.equals(this.subaccountType, subaccountWithToken.subaccountType) &&
        Objects.equals(this.emailAccepted, subaccountWithToken.emailAccepted) &&
        Objects.equals(this.phoneAccepted, subaccountWithToken.phoneAccepted) &&
        Objects.equals(this.avatar, subaccountWithToken.avatar) &&
        Objects.equals(this.token, subaccountWithToken.token);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, username, firstName, lastName, email, status, balance, phone, company, currency, country, timezone, subaccountType, emailAccepted, phoneAccepted, avatar, token);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubaccountWithToken {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    subaccountType: ").append(toIndentedString(subaccountType)).append("\n");
    sb.append("    emailAccepted: ").append(toIndentedString(emailAccepted)).append("\n");
    sb.append("    phoneAccepted: ").append(toIndentedString(phoneAccepted)).append("\n");
    sb.append("    avatar: ").append(toIndentedString(avatar)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

