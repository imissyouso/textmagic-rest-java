/*
 * TextMagic API Documentation
 * # Overview ## Introduction 22 <img style=\"float: right; margin-left: 10px; width: 100px;\" src=\"images/phone.png\"> TextMagic SMS API is a platform for building your own messaging app using our messaging infrastructure. It allows you to send and receive SMS text messages, query information about inbound and outbound messages, manage contacts, create templates (i.e. message formats and static texts) and schedule recurrent SMS messages as well as process bulk SMS messages. <button name=\"button\" onclick=\"http://www.google.com\" class=\"btn\">Try TextMagic API for Free</button>  ### Two Ways to Use TextMagic API * [REST API](https://www.textmagic.com/docs/api/start/) – get full access to TextMagic’s messaging gateway features * [Email to SMS API](https://www.textmagic.com/docs/api/send-email-to-sms/) – set up two-way SMS communication without the need to write any additional code  ### Code Libraries We have created a set of client libraries for the most popular programming languages (such as REST API Java and REST API PHP). These libraries allow you to integrate our API into your code in minutes. Just choose your preferred language to get started:  ## Getting started Get Started with the TextMagic REST API To start sending text messages using the TextMagic REST API, just follow these steps: 1. Generate the API credentials 1. Connect to our API endpoint This page provides all the information you need to get started. Here, we explain the following steps:  How to obtain the API credentials The API endpoint How the REST API works The next step How to obtain the API credentials  ### How to obtain the API credentials To start sending text messages, you need to create an API key. API keys are similar to an account password; the difference is that an API key only provides access to the API: you cannot log in to TextMagic Online using the API key.  Your program sends the login credentials with each API request as HTTP headers: `X-TM-Username` is your TextMagic username, while `X-TM-Key` is your API key.  How to obtain an API key:  1. Log in to TextMagic (or start a free trial if you haven’t registered yet). 1. Go to the API settings page. 1. Click the Add new API key button. 1. Enter an app name for this key. Note, it’s just a label, so pick any name. 1. Click Generate new key. 1. You should now see your new API key in the green notification banner above the table:  ![alt text](images/credentials.png)  > Note for API v1 users > V1 keys are not compatible with the V2 version of the TextMagic REST API, so you will need to generate a new API key to use the V2 endpoint.  ### The API endpoint The TextMagic REST API endpoint is: ``` https://rest.textmagic.com/api/v2 ``` All the URLs referenced in this documentation should use this base URL.  ### How the REST API works REST APIs use the HTTP protocol to send and receive messages. REST messages are usually encoded as JSON documents and are an improvement over older methods such as the XML based SOAP protocol. REST APIs use the same set of methods that web browsers use: POST, GET, PUT or DELETE. These correspond to the CRUD operations: create, read, update and delete. Often, REST URIs provide direct CRUD access to entities or collections of entities, for example: http://api.foo.com/people. In this instance, to delete a person’s endpoint, you might simply call the endpoint DELETE http://api.foo.com/people/{id}. REST makes these types of operations simple.  > Example > > Let’s take the entity most often used in messaging: contacts. Imagine you want to perform operations on your contacts list: well, it’s only a matter of calling the following endpoints: > * GET /api/v2/contacts (get all of your contacts) > * GET /api/v2/contacts/{id} (get a specific contact) > * POST /api/v2/contacts (create a new contact) > * PUT /api/v2/contacts/{id} (update an existing contact) > * DELETE /api/v2/contacts/{id} (delete an existing contact) It’s that simple! In fact, that’s all you need to do to manage the contacts in your TextMagic account!  ## Sandbox Sandbox is a tool to test TextMagic REST API requests without the need to install any applications or write any code. Here, we explain the following details about Sandbox: * The credentials area * Command documentation * How it works  <a href=\"\">Go to TextMagic Sandbox</a>  ### The credentials area To make requests using your TextMagic account, you need to enter your account username and your API key into the corresponding fields. You may also Save them in your browser or press Clear to erase them.  ![alt text](images/sandbox.png) 
 *
 * OpenAPI spec version: 2
 * Contact: support@textmagi.biz
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.textmagic.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * GetBalanceNotificationOptionsResponse
 */

public class GetBalanceNotificationOptionsResponse {
  @SerializedName("1")
  private String _1 = null;

  @SerializedName("2")
  private String _2 = null;

  @SerializedName("3")
  private String _3 = null;

  @SerializedName("5")
  private String _5 = null;

  @SerializedName("10")
  private String _10 = null;

  @SerializedName("20")
  private String _20 = null;

  @SerializedName("30")
  private String _30 = null;

  @SerializedName("50")
  private String _50 = null;

  @SerializedName("100")
  private String _100 = null;

  @SerializedName("500")
  private String _500 = null;

  @SerializedName("1000")
  private String _1000 = null;

  public GetBalanceNotificationOptionsResponse _1(String _1) {
    this._1 = _1;
    return this;
  }

   /**
   * Contains sign of currency in Unicode hex code
   * @return _1
  **/
  @ApiModelProperty(example = "£1.00", required = true, value = "Contains sign of currency in Unicode hex code")
  public String get1() {
    return _1;
  }

  public void set1(String _1) {
    this._1 = _1;
  }

  public GetBalanceNotificationOptionsResponse _2(String _2) {
    this._2 = _2;
    return this;
  }

   /**
   * Contains sign of currency in Unicode hex code
   * @return _2
  **/
  @ApiModelProperty(example = "£2.00", required = true, value = "Contains sign of currency in Unicode hex code")
  public String get2() {
    return _2;
  }

  public void set2(String _2) {
    this._2 = _2;
  }

  public GetBalanceNotificationOptionsResponse _3(String _3) {
    this._3 = _3;
    return this;
  }

   /**
   * Contains sign of currency in Unicode hex code
   * @return _3
  **/
  @ApiModelProperty(example = "£3.00", required = true, value = "Contains sign of currency in Unicode hex code")
  public String get3() {
    return _3;
  }

  public void set3(String _3) {
    this._3 = _3;
  }

  public GetBalanceNotificationOptionsResponse _5(String _5) {
    this._5 = _5;
    return this;
  }

   /**
   * Contains sign of currency in Unicode hex code
   * @return _5
  **/
  @ApiModelProperty(example = "£5.00", required = true, value = "Contains sign of currency in Unicode hex code")
  public String get5() {
    return _5;
  }

  public void set5(String _5) {
    this._5 = _5;
  }

  public GetBalanceNotificationOptionsResponse _10(String _10) {
    this._10 = _10;
    return this;
  }

   /**
   * Contains sign of currency in Unicode hex code
   * @return _10
  **/
  @ApiModelProperty(example = "£10.00", required = true, value = "Contains sign of currency in Unicode hex code")
  public String get10() {
    return _10;
  }

  public void set10(String _10) {
    this._10 = _10;
  }

  public GetBalanceNotificationOptionsResponse _20(String _20) {
    this._20 = _20;
    return this;
  }

   /**
   * Contains sign of currency in Unicode hex code
   * @return _20
  **/
  @ApiModelProperty(example = "£20.00", required = true, value = "Contains sign of currency in Unicode hex code")
  public String get20() {
    return _20;
  }

  public void set20(String _20) {
    this._20 = _20;
  }

  public GetBalanceNotificationOptionsResponse _30(String _30) {
    this._30 = _30;
    return this;
  }

   /**
   * Contains sign of currency in Unicode hex code
   * @return _30
  **/
  @ApiModelProperty(example = "£30.00", required = true, value = "Contains sign of currency in Unicode hex code")
  public String get30() {
    return _30;
  }

  public void set30(String _30) {
    this._30 = _30;
  }

  public GetBalanceNotificationOptionsResponse _50(String _50) {
    this._50 = _50;
    return this;
  }

   /**
   * Contains sign of currency in Unicode hex code
   * @return _50
  **/
  @ApiModelProperty(example = "£50.00", required = true, value = "Contains sign of currency in Unicode hex code")
  public String get50() {
    return _50;
  }

  public void set50(String _50) {
    this._50 = _50;
  }

  public GetBalanceNotificationOptionsResponse _100(String _100) {
    this._100 = _100;
    return this;
  }

   /**
   * Contains sign of currency in Unicode hex code
   * @return _100
  **/
  @ApiModelProperty(example = "£100.00", required = true, value = "Contains sign of currency in Unicode hex code")
  public String get100() {
    return _100;
  }

  public void set100(String _100) {
    this._100 = _100;
  }

  public GetBalanceNotificationOptionsResponse _500(String _500) {
    this._500 = _500;
    return this;
  }

   /**
   * Contains sign of currency in Unicode hex code
   * @return _500
  **/
  @ApiModelProperty(example = "£500.00", required = true, value = "Contains sign of currency in Unicode hex code")
  public String get500() {
    return _500;
  }

  public void set500(String _500) {
    this._500 = _500;
  }

  public GetBalanceNotificationOptionsResponse _1000(String _1000) {
    this._1000 = _1000;
    return this;
  }

   /**
   * Contains sign of currency in Unicode hex code
   * @return _1000
  **/
  @ApiModelProperty(example = "£1,000.00", required = true, value = "Contains sign of currency in Unicode hex code")
  public String get1000() {
    return _1000;
  }

  public void set1000(String _1000) {
    this._1000 = _1000;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetBalanceNotificationOptionsResponse getBalanceNotificationOptionsResponse = (GetBalanceNotificationOptionsResponse) o;
    return Objects.equals(this._1, getBalanceNotificationOptionsResponse._1) &&
        Objects.equals(this._2, getBalanceNotificationOptionsResponse._2) &&
        Objects.equals(this._3, getBalanceNotificationOptionsResponse._3) &&
        Objects.equals(this._5, getBalanceNotificationOptionsResponse._5) &&
        Objects.equals(this._10, getBalanceNotificationOptionsResponse._10) &&
        Objects.equals(this._20, getBalanceNotificationOptionsResponse._20) &&
        Objects.equals(this._30, getBalanceNotificationOptionsResponse._30) &&
        Objects.equals(this._50, getBalanceNotificationOptionsResponse._50) &&
        Objects.equals(this._100, getBalanceNotificationOptionsResponse._100) &&
        Objects.equals(this._500, getBalanceNotificationOptionsResponse._500) &&
        Objects.equals(this._1000, getBalanceNotificationOptionsResponse._1000);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_1, _2, _3, _5, _10, _20, _30, _50, _100, _500, _1000);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetBalanceNotificationOptionsResponse {\n");
    
    sb.append("    _1: ").append(toIndentedString(_1)).append("\n");
    sb.append("    _2: ").append(toIndentedString(_2)).append("\n");
    sb.append("    _3: ").append(toIndentedString(_3)).append("\n");
    sb.append("    _5: ").append(toIndentedString(_5)).append("\n");
    sb.append("    _10: ").append(toIndentedString(_10)).append("\n");
    sb.append("    _20: ").append(toIndentedString(_20)).append("\n");
    sb.append("    _30: ").append(toIndentedString(_30)).append("\n");
    sb.append("    _50: ").append(toIndentedString(_50)).append("\n");
    sb.append("    _100: ").append(toIndentedString(_100)).append("\n");
    sb.append("    _500: ").append(toIndentedString(_500)).append("\n");
    sb.append("    _1000: ").append(toIndentedString(_1000)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

